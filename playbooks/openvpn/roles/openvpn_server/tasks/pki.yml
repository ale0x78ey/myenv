- name: openvpn_server | configure | check if ca_password.txt exists
  stat: path="{{ playbook_dir }}/files/ca_password.txt"
  delegate_to: 127.0.0.1
  register: ca_password_txt

- name: openvpn_server | configure | read ca_password.txt
  command: cat "{{ playbook_dir }}/files/ca_password.txt"
  register: ca_password_data
  no_log: True
  changed_when: False
  delegate_to: 127.0.0.1
  when: ca_password_txt.stat.exists == True

- name: openvpn_server | configure | read CA password
  set_fact: ca_password="{{ ca_password_data.stdout }}"
  no_log: True
  when: ca_password_txt.stat.exists == True

- name: openvpn_server | configure | generate CA password
  shell: echo "$(head /dev/urandom | tr -dc A-Za-z0-9 | head -c32)"
  register: ca_password_data
  no_log: True
  when: ca_password_txt.stat.exists == False

- name: openvpn_server | configure | read CA password
  set_fact: ca_password="{{ ca_password_data.stdout }}"
  no_log: True
  changed_when: False
  when: ca_password is not defined

- name: openvpn_server | configure | create files dir
  file:
    path: "{{ playbook_dir }}/files"
    state: directory
  delegate_to: 127.0.0.1
  become: False
  when: ca_password_txt.stat.exists == False

- name: openvpn_server | configure | git co easy-rsa
  git:
    repo: https://github.com/OpenVPN/easy-rsa.git
    version: "{{ openvpn_easyrsa_version }}"
    accept_hostkey: True
    remote: github
    dest: "{{ openvpn_path }}/easyrsa"

- name: openvpn_server | configure | initialize PKI
  shell: echo "yes" | ./easyrsa init-pki
  args:
    chdir: "{{ openvpn_path_easyrsa }}"
  when: ca_password_txt.stat.exists == False

- name: openvpn_server | configure | save CA password
  copy:
    content: "{{ ca_password_data.stdout }}"
    dest: "{{ playbook_dir }}/files/ca_password.txt"
  no_log: True
  become: False
  delegate_to: 127.0.0.1
  when: ca_password_txt.stat.exists == False

- name: openvpn_server | configure | build CA
  expect:
    command: ./easyrsa build-ca
    responses:
      'Enter New CA Key Passphrase: $': "{{ ca_password }}"
      'Re-Enter New CA Key Passphrase: $': "{{ ca_password }}"
      'Common Name \(.*\) \[Easy-RSA CA\]:$': "ca@{{ inventory_hostname }}"
    chdir: "{{ openvpn_path_easyrsa }}"
    creates: "{{ openvpn_path_easyrsa }}/pki/private/ca.key"

- name: openvpn_server | configure | build CRL
  expect:
    command: ./easyrsa gen-crl
    responses:
      'Enter pass phrase for .*:$': "{{ ca_password }}"
    chdir: "{{ openvpn_path_easyrsa }}"
    creates: "{{ openvpn_path_easyrsa }}/pki/crl.pem"

- name: openvpn_server | configure | build ta.key
  shell: openvpn --genkey --secret ta.key
  args:
    chdir: "{{ openvpn_path_easyrsa }}/pki"
    creates: "{{ openvpn_path_easyrsa }}/pki/ta.key"

- name: openvpn_server | configure | build dh.pem
  shell: ./easyrsa gen-dh
  args:
    chdir: "{{ openvpn_path_easyrsa }}"
    creates: "{{ openvpn_path_easyrsa }}/pki/dh.pem"

- name: openvpn_server | configure | build server key+cert
  expect:
    command: ./easyrsa build-server-full server nopass
    responses:
      'Enter pass phrase for .*:$': "{{ ca_password }}"
    chdir: "{{ openvpn_path_easyrsa }}"
    creates: "{{ openvpn_path_easyrsa }}/pki/private/server.key"

- name: openvpn_server | configure | fetch ca.crt
  fetch:
    src: "{{ openvpn_path_easyrsa }}/pki/ca.crt"
    dest: "{{ playbook_dir }}/files/ca@{{ inventory_hostname }}.crt"
    flat: yes

- name: openvpn_server | configure | fetch ta.key
  fetch:
    src: "{{ openvpn_path_easyrsa }}/pki/ta.key"
    dest: "{{ playbook_dir }}/files/ta@{{ inventory_hostname }}.key"
    flat: yes

- name: openvpn_server | configure | install ca.crt
  file:
    src: "{{ openvpn_path_easyrsa }}/pki/ca.crt"
    dest: "{{ openvpn_path_ca }}"
    force: yes
    state: link

- name: openvpn_server | configure | install ta.key
  file:
    src: "{{ openvpn_path_easyrsa }}/pki/ta.key"
    dest: "{{ openvpn_path_ta }}"
    force: yes
    state: link

- name: openvpn_server | configure | install dh.pem
  file:
    src: "{{ openvpn_path_easyrsa }}/pki/dh.pem"
    dest: "{{ openvpn_path_dh }}"
    force: yes
    state: link

- name: openvpn_server | configure | install crl.pem
  file:
    src: "{{ openvpn_path_easyrsa }}/pki/crl.pem"
    dest: "{{ openvpn_path_crl }}"
    force: yes
    state: link

- name: openvpn_server | configure | install server.key
  file:
    src: "{{ openvpn_path_easyrsa }}/pki/private/server.key"
    dest: "{{ openvpn_path_server_key }}"
    force: yes
    state: link

- name: openvpn_server | configure | install server.crt
  file:
    src: "{{ openvpn_path_easyrsa }}/pki/issued/server.crt"
    dest: "{{ openvpn_path_server_crt }}"
    force: yes
    state: link
